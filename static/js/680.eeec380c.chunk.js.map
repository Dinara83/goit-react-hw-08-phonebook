{"version":3,"file":"static/js/680.eeec380c.chunk.js","mappings":"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","sources":["pages/HomePage/HomePage.jsx","webpack://react-homework-template/./src/pages/ImportantContactsPage/important-contacts-page.module.css?7245","pages/ImportantContactsPage/ImportantContactsPage.jsx","components/Phonebook/PhonebookContact/initialState.js","webpack://react-homework-template/./src/components/Phonebook/PhonebookContact/contact-form.module.css?ab55","components/Phonebook/PhonebookContact/ContactForm.jsx","redux/filter/filter-selectors.js","webpack://react-homework-template/./src/components/Phonebook/FilterPhonebook/filter-phonebook.module.css?ae89","components/Phonebook/FilterPhonebook/FilterPhonebook.jsx","webpack://react-homework-template/./src/components/Phonebook/Contacts/contact-list.module.css?1934","components/Phonebook/Contacts/ContactList.jsx","webpack://react-homework-template/./src/pages/PhonebookPage/phonebook.module.css?9f47","pages/PhonebookPage/PhonebookPage.jsx","redux/contacts/contacts-selectors.js"],"sourcesContent":["import PhonebookPage from \"pages/PhonebookPage/PhonebookPage\";\nimport ImportantContactsPage from \"pages/ImportantContactsPage/ImportantContactsPage\";\n\nconst HomePage = () => {\n  return (\n\t<>\n  <PhonebookPage />\n  <ImportantContactsPage />\n  </>\n  )\n};\n\nexport default HomePage;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsItem\":\"important-contacts-page_contactsItem__DlY0K\",\"contactsText\":\"important-contacts-page_contactsText__Vacsn\",\"contactsBtn\":\"important-contacts-page_contactsBtn__O4GrD\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { getImportantContacts } from 'redux/contacts/contacts-selectors';\nimport { fetchDeleteContact } from 'redux/contacts/contacts-operations';\n\nimport css from './important-contacts-page.module.css';\n\nconst ImportantContactsPage = () => {\n  const contacts = useSelector(getImportantContacts);\n\n  const dispatch = useDispatch();\n\n  const handleRemoveContact = payload => {\n    const action = fetchDeleteContact(payload);\n    dispatch(action);\n  };\n\n  const elements = contacts.map(({ id, name, number }) => (\n    <li key={id} className={css.contactsItem}>\n      <span className={css.contactsText}>\n        {name}: {number}\n      </span>\n      <button\n        className={css.contactsBtn}\n        onClick={() => handleRemoveContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  ));\n\n  return <ul className={css.contactsList}>{elements}</ul>;\n};\n\nexport default ImportantContactsPage;\n","const initialState = {\n  name: '',\n  number: '',\n  importantContact: false,\n};\n\nexport default initialState;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"contact-form_wrapper__KizuZ\",\"label\":\"contact-form_label__eDkdO\",\"input\":\"contact-form_input__hOykG\",\"btn\":\"contact-form_btn__H7sX5\"};","import { useState } from 'react';\nimport { fetchAddContact } from 'redux/contacts/contacts-operations';\n\nimport { useDispatch } from 'react-redux';\n\nimport initialState from './initialState';\nimport css from './contact-form.module.css';\n\nconst ContactForm = () => {\n  const [state, setState] = useState({ ...initialState });\n\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setState(prevState => {\n      return { ...prevState, [name]: newValue };\n    });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    dispatch(fetchAddContact({ ...state }));\n    setState({ ...initialState });\n  };\n\n  const { name, number, newValue, importantContact } = state;\n\n  return (\n    <form className={css.wrapper} onSubmit={handleSubmit}>\n      <label className={css.label}>Name</label>\n      <input\n        className={css.input}\n        value={name}\n        type=\"text\"\n        name=\"name\"\n        onChange={handleChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <label className={css.label}>Number</label>\n      <input\n        className={css.input}\n        value={number}\n        type=\"tel\"\n        name=\"number\"\n        onChange={handleChange}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <label className={css.label}>Important Contact</label>\n      <input\n        name=\"importantContact\"\n\t\tvalue={newValue}\n        checked={importantContact}\n        type=\"checkbox\"\n        onChange={handleChange}\n      />\n\n      <button className={css.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","export const getFilter = ({ filter }) => filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapperFilter\":\"filter-phonebook_wrapperFilter__vC0a5\",\"labelFilter\":\"filter-phonebook_labelFilter__KzwfD\",\"inputFilter\":\"filter-phonebook_inputFilter__j7DCe\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { getFilter } from 'redux/filter/filter-selectors';\n\nimport css from './filter-phonebook.module.css';\n\nconst FilterPhonebook = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return (\n    <form className={css.wrapperFilter}>\n      <label className={css.labelFilter}>Find contacts by name</label>\n      <input\n        value={filter}\n        className={css.inputFilter}\n        type=\"text\"\n        name=\"filter\"\n        onChange={changeFilter}\n      />\n    </form>\n  );\n};\n\nexport default FilterPhonebook;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"contact-list_contactsList__VBg5-\",\"contactsText\":\"contact-list_contactsText__P+FJA\",\"contactsBtn\":\"contact-list_contactsBtn__zLHx9\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { fetchDeleteContact } from 'redux/contacts/contacts-operations';\nimport {\n  getAllContacts,\n  getFilteredContacts,\n} from 'redux/contacts/contacts-selectors';\n\nimport css from './contact-list.module.css';\n\nconst ContactList = () => {\n  const filterContacts = useSelector(getFilteredContacts);\n  const allContacts = useSelector(getAllContacts);\n\n  const dispatch = useDispatch();\n\n  const onDeleteContact = payload => {\n    const action = fetchDeleteContact(payload);\n    dispatch(action);\n  };\n\n  const elements = filterContacts.map(\n    ({ id, name, number, importantContact }) => (\n      <li style={{ fontWeight: importantContact ? 'bold' : 'normal' }} key={id}>\n        <span className={css.contactsText}>\n          {name}: {number}\n        </span>\n        <button className={css.contactsBtn} onClick={() => onDeleteContact(id)}>\n          Delete\n        </button>\n      </li>\n    )\n  );\n  const isContacts = Boolean(allContacts.length);\n\n  return (\n    <>\n      <div>\n        <ul className={css.contactsList}>{elements}</ul>\n      </div>\n      {!isContacts && <p>No contacts</p>}\n    </>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"conteinerPhonebook\":\"phonebook_conteinerPhonebook__bjv-J\",\"text\":\"phonebook_text__MwB4P\"};","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { fetchAllContacts } from 'redux/contacts/contacts-operations';\n\nimport ContactForm from 'components/Phonebook/PhonebookContact/ContactForm';\nimport FilterPhonebook from 'components/Phonebook/FilterPhonebook/FilterPhonebook';\nimport ContactList from 'components/Phonebook/Contacts/ContactList';\n\nimport css from './phonebook.module.css';\n\nconst PhonebookPage = () => {\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tdispatch(fetchAllContacts())\n\t  }, [dispatch]);\n\t\n\t\n  return (\n    <main className={css.conteinerPhonebook}>\n      <ContactForm />\n      <h2 className={css.text}>Contacts</h2>\n      <FilterPhonebook />\n      <ContactList />\n    </main>\n  );\n};\n\nexport default PhonebookPage;\n","export const getAllContacts = ({ contacts }) => contacts.items;\n\nexport const getImportantContacts = ({ contacts }) => {\n  const onlyImportantContacts = contacts.items.filter(\n    ({ importantContact }) => importantContact\n  );\n  return onlyImportantContacts;\n};\n\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n  const normalizedContact = filter.toLowerCase();\n  const result = contacts.items.filter(({ name, number }) => {\n    return (\n      name.toLowerCase().includes(normalizedContact) ||\n      number.toLowerCase().includes(normalizedContact)\n    );\n  });\n  return result;\n};\n"],"names":["contacts","useSelector","getImportantContacts","dispatch","useDispatch","elements","map","id","name","number","className","css","onClick","payload","action","fetchDeleteContact","handleRemoveContact","importantContact","useState","initialState","state","setState","handleChange","target","value","type","checked","newValue","prevState","onSubmit","evt","preventDefault","fetchAddContact","onChange","pattern","title","required","getFilter","filter","setFilter","filterContacts","getFilteredContacts","allContacts","getAllContacts","style","fontWeight","onDeleteContact","isContacts","Boolean","length","useEffect","fetchAllContacts","items","normalizedContact","toLowerCase","includes"],"sourceRoot":""}